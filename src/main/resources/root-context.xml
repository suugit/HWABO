<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- DataSource 등록 -->
	<bean id="realDataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@101.101.209.87:1521:xe"/>
		<property name="username" value="hwabo"/>
		<property name="password" value="j201016"/>
	</bean>
	<!-- log4jdbc-remix 관련 dataSource처리  -->
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="realDataSource" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
				<property name="sqlPrefix" value="[SQL] " />
			</bean>
		</property>
	</bean>

	<!-- Spring과  MyBatis 연동 설정 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" /> 
		<!-- 로그 출력시에는 dataSource 로, 로그 출력 안되게 할때는 realDataSource 로 바꿈 -->
	</bean>
	
	
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSession"></constructor-arg>
	</bean>
	
	
	<!-- 트랜잭션 관리 설정 -->
	<bean
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		id="transactionManager">
		<property name="dataSource" ref="realDataSource"></property>
	</bean>	

	<!-- service 에서 필요한 시점에 commit / rollback 이 구동되게 aop 설정 처리 -->
	<tx:advice transaction-manager="transactionManager" id="txAdvice">
		<tx:attributes>
			<tx:method name="select*" read-only="true" rollback-for="Exception" />
			<tx:method name="insert*" rollback-for="Exception" />
			<tx:method name="update*" rollback-for="Exception" />
			<tx:method name="delete*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<tx:annotation-driven transaction-manager="transactionManager" />
		
	
	<aop:config proxy-target-class="true">
		<aop:pointcut
			expression="execution(* com.beet.HWABO..*Impl.*(..))" id="serviceMethod" />
		<aop:advisor advice-ref="txAdvice" id="transactionAdvisor" pointcut-ref="serviceMethod" />
	</aop:config>
		<!-- 이메일 인증 -->
	    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com" />
        <property name="port" value="587" />
        <property name="username" value="hwabo49@gmail.com"/>
        <property name="password" value="beet1216" />
        
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
            </props>
        </property>
    </bean>
</beans>







